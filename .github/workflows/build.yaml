name: build
on:
  push:
    branches: [ "3.X.X-Branch" ]
  pull_request:
    branches: [ "3.X.X-Branch" ]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
    - uses: actions/checkout@v3
    
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # This path is specific to npm
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    # - name: Lint
    #   run: npm run lint

    - name: Build
      run: npm run build 

    - name: Send Telegram notification on failure
      if: failure()
      run: |
        curl -X POST \
             -H 'Content-Type: application/json' \
             -d '{"chat_id": "${{ secrets.TELEGRAM_CHANNEL_ID }}", "text": "ðŸš¨ Build Failed ðŸš¨\n\nRepository: ${{ github.repository }}\nBranch: ${{ github.ref_name }}\nWorkflow: ${{ github.workflow }}\nAction: ${{ github.action }}\nActor: ${{ github.actor }}\n\nCheck it out ðŸ‘€: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}", "parse_mode": "Markdown", "disable_web_page_preview": true}' \
             https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
